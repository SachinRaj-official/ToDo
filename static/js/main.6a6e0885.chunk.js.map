{"version":3,"sources":["Components/todowork/todo.js","App.js","index.js"],"names":["Todo","useState","inputdata","setInputData","lists","localStorage","getItem","JSON","parse","getLocalData","items","setItems","isEditItem","setisEditItem","toggleButton","settoggleButton","addItem","map","curElem","id","name","myNewInputData","Date","getTime","toString","alert","useEffect","setItem","stringify","className","src","alt","type","placeholder","value","onChange","Event","target","onClick","index","item_edit","find","editItem","updatedItem","filter","deleteItem","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOA4HeA,EA9GF,WACT,MAAmCC,mBAAS,IAA5C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAZX,WACf,IAAMG,EAAMC,aAAaC,QAAQ,cACjC,OAAGF,EACQG,KAAKC,MAAMJ,GAEX,GAOwBK,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAoCV,mBAAS,IAA7C,mBAAOW,EAAP,KAAmBC,EAAnB,KACA,EAAwCZ,oBAAS,GAAjD,mBAAOa,EAAP,KAAqBC,EAArB,KAGMC,EAAS,WACX,GAAId,EAEG,GAAGA,GAAYY,EAClBH,EACID,EAAMO,KAAI,SAACC,GACP,OAAGA,EAAQC,KAAOP,EACd,2BAAUM,GAAV,IAAmBE,KAAMlB,IAEtBgB,MAGnBf,EAAa,IACbU,IACAE,GAAgB,OAEZ,CACA,IAAMM,EAAgB,CAClBF,IAAI,IAAIG,MAAOC,UAAUC,WACzBJ,KAAMlB,GAEVS,EAAS,GAAD,mBAAKD,GAAL,CAAYW,KACpBlB,EAAa,SApBbsB,MAAM,yBAmDd,OAJAC,qBAAU,WACNrB,aAAasB,QAAQ,aAAcpB,KAAKqB,UAAUlB,MACnD,CAACA,IAGA,mCACA,qBAAKmB,UAAU,WAAf,SACI,sBAAKA,UAAU,YAAf,UACI,mCACI,qBAAKC,IAAI,YAAYC,IAAI,SACzB,0DAEA,sBAAKF,UAAU,WAAf,UACI,uBACAG,KAAK,OACLC,YAAY,mBACZJ,UAAU,eACVK,MAAOhC,EACPiC,SAAU,SAACC,GAAD,OAAUjC,EAAaiC,EAAMC,OAAOH,UAE5CpB,EAAgB,mBAAGe,UAAU,sBAAsBS,QAAStB,IAAkB,mBAAGa,UAAU,qBAAqBS,QAAStB,OAK3H,qBAAKa,UAAU,YAAf,SAEKnB,EAAMO,KAAI,SAACC,EAASqB,GACjB,OACI,sBAAKV,UAAU,WAAf,UACJ,6BAAKX,EAAQE,OACb,sBAAKS,UAAU,WAAf,UACA,mBAAGA,UAAU,sBAAsBS,QAAS,kBAvDxD,SAACC,GACb,IAAMC,EAAW9B,EAAM+B,MAAK,SAACvB,GACzB,OAAOA,EAAQC,KAAKoB,KAExBpC,EAAaqC,EAAUpB,MACvBP,EAAc0B,GACdxB,GAAgB,GAiDyD2B,CAASxB,EAAQC,OAClE,mBAAGU,UAAU,2BAA2BS,QAAS,kBA9C3D,SAACC,GACf,IAAMI,EAAcjC,EAAMkC,QAAO,SAAC1B,GAC9B,OAAOA,EAAQC,KAAOoB,KAE1B5B,EAASgC,GA2CeE,CAAW3B,EAAQC,YALgBD,EAAQC,SAcnD,qBAAKU,UAAU,YAAf,SACI,wBAAQA,UAAU,eAAe,oBAAkB,aAAaS,QAjDxE,WACZ3B,EAAS,KAgDW,SACI,0DCvGjBmC,EATH,WACV,OACE,mCACiB,cAAC,EAAD,OCArBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6a6e0885.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\n\r\nimport \"./style.css\";\r\n\r\nconst getLocalData=()=>{\r\n    const lists=localStorage.getItem(\"mytodoList\");\r\n    if(lists){\r\n        return JSON.parse(lists);\r\n    } else{\r\n        return [];\r\n    }\r\n\r\n};\r\n\r\nconst Todo = () => {\r\n    const [inputdata, setInputData] =  useState(\"\");\r\n    const [items, setItems] = useState(getLocalData());\r\n    const [isEditItem, setisEditItem] = useState(\"\");\r\n    const [toggleButton, settoggleButton] = useState(false);\r\n\r\n    //add the items Funtion\r\n    const addItem= ()=>{\r\n        if(!inputdata){\r\n            alert(\"Please Fill the Data\");\r\n        } else if(inputdata &&toggleButton){\r\n            setItems(\r\n                items.map((curElem)=>{\r\n                    if(curElem.id === isEditItem){\r\n                        return{...curElem, name: inputdata}\r\n                    }\r\n                    return curElem;\r\n                })\r\n            );\r\n        setInputData(\"\");\r\n        setisEditItem();\r\n        settoggleButton(false);\r\n        } \r\n        else{\r\n            const myNewInputData ={\r\n                id: new Date().getTime().toString(),\r\n                name: inputdata,\r\n            }\r\n            setItems([...items, myNewInputData]);\r\n            setInputData(\"\");\r\n        }\r\n    };\r\n    //Edit the items\r\n    const editItem= (index)=>{\r\n        const item_edit= items.find((curElem)=>{\r\n            return curElem.id===index;\r\n        });\r\n        setInputData(item_edit.name);\r\n        setisEditItem(index);\r\n        settoggleButton(true);\r\n    };\r\n\r\n    //How to Delete Items Section\r\n    const deleteItem =(index)=>{\r\n        const updatedItem = items.filter((curElem)=> {\r\n            return curElem.id !== index;\r\n        });\r\n        setItems(updatedItem);\r\n    };\r\n\r\n    //Remove ALL \r\n    const removeAll=()=>{\r\n        setItems([]);\r\n\r\n    };\r\n    //Adding Local Storage\r\n    useEffect(() => {\r\n        localStorage.setItem(\"mytodoList\", JSON.stringify(items));\r\n    }, [items]);\r\n\r\n    return (\r\n        <>\r\n        <div className=\"main-div\">\r\n            <div className=\"child-div\">\r\n                <figure>\r\n                    <img src=\"write.png\" alt=\"LOGO\" />\r\n                    <figcaption>ADD your List</figcaption>\r\n                    </figure>\r\n                    <div className=\"addItems\">\r\n                        <input \r\n                        type=\"text\" \r\n                        placeholder=\"✍ Add Items\" \r\n                        className=\"form-control\" \r\n                        value={inputdata} \r\n                        onChange={(Event)=> setInputData(Event.target.value)}\r\n                        />\r\n                        { toggleButton ? (<i className=\"far fa-edit add-btn\" onClick={addItem}></i>) : (<i className=\"fa fa-plus add-btn\" onClick={addItem}></i>)}\r\n                \r\n                        \r\n                        </div>\r\n                        {/*Show our Items */}\r\n                        <div className=\"showItems\">\r\n\r\n                            {items.map((curElem, index)=>{\r\n                                return(\r\n                                    <div className=\"eachItem\" key={curElem.id}>\r\n                                <h3>{curElem.name}</h3>\r\n                                <div className=\"todo-btn\">\r\n                                <i className=\"far fa-edit add-btn\" onClick={()=> editItem(curElem.id)}></i>\r\n                                <i className=\"far fa-trash-alt add-btn\" onClick={()=>\r\n                                deleteItem(curElem.id)}></i>\r\n                                </div>\r\n                            </div>\r\n\r\n                                );\r\n\r\n                            })}\r\n                        </div>\r\n                        {/*Remove all Button*/}\r\n                        <div className=\"showItems\">\r\n                            <button className=\"btn effect04\" data-sm-link-text=\"Remove All\" onClick={removeAll}>\r\n                                <span>Check List</span>\r\n                            </button>\r\n                        </div>                  \r\n            </div>\r\n        </div> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Todo;\r\n","import React from 'react';\nimport Todo from './Components/todowork/todo';\n\nconst App = () => {\n  return (\n    <>\n                     <Todo/>\n      \n    </>\n  )\n}\n\nexport default App\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}